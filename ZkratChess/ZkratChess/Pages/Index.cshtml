@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<h1>
    <span class="glyphicon glyphicon-knight">ŠACHY</span>
</h1>

<div class="chessboard-class">
    @for (int i = 0; i < 8; i++)
    {
        <div class="row-class">
            <div class="field-class">
                <span>@((char)('1' + 7-i))</span>
            </div>
            @for (int j = 0; j < 8; j++)
            {
                <div class=
                     "@( "field-class "+
                         (Model.isWhiteField(i,j)  ? "field-white-class" : "field-black-class")+" "
                        +(Model.isWhiteFigure(i,j) ? "figure-white-class": "figure-black-class") )">
                    <span>@Html.Raw(Model.getFigureStringAt(i, j))</span>
                </div>
            }
        </div>
    }
    <div class="row-class">
        <div class="field-class"></div>
        @for (int j = 0; j < 8; j++)
        {
            <div class="field-class">
                <span>@((char)('A'+j))</span>
            </div>
        }
    </div>
</div>
<br />
<form method="post">
    <input asp-for="Step" name="step" value="" placeholder="A2A4 - example"/>
    <button type="submit" class="btn btn-default">@Model.getColorOnMove() Go</button> 
</form>

@if (!ModelState.IsValid)
{
    <div class="alert alert-warning">@ModelState["step"].Errors.First().ErrorMessage!</div>
}

<style>
    .field-class {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 50px;
        height: 50px;
        font-size  :large;
    }

    .field-white-class {
        background-color: #cccccc;
    }
    .field-black-class {
        background-color: rgb(100,100,100);
    }

    .figure-white-class {
        color: white;
    }

    .figure-black-class {
        color: black;
    }

    .row-class {
        position: relative;
        display: inline-flex;
        text-align: center;
        color: black;
    }
    .chessboard-class {
        position: relative;
        display: flex;
        flex-direction: column;
        padding: 5px;
    }
    span {
        display: inline-block;
        vertical-align: middle;
        line-height: normal;
    }
</style>